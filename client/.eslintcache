[{"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/index.js":"1","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/App.js":"2","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/reportWebVitals.js":"3","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Signup.js":"4","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Login.js":"5","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Home.js":"6","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Profile.js":"7","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/SingleThought.js":"8","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/Footer/index.js":"9","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/Header/index.js":"10","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/auth.js":"11","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/mutations.js":"12","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/queries.js":"13","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/ThoughtForm/index.js":"14","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/ThoughtList/index.js":"15","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/CommentList/index.js":"16","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/CommentForm/index.js":"17","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/index.js":"18","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/App.js":"19","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/Navbar.js":"20","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/pages/SearchBooks.js":"21","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/pages/SavedBooks.js":"22","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/LoginForm.js":"23","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/SignupForm.js":"24","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/auth.js":"25","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/localStorage.js":"26","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/API.js":"27","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/mutations.js":"28","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/queries.js":"29"},{"size":500,"mtime":1645592355874,"results":"30","hashOfConfig":"31"},{"size":2170,"mtime":1645592355873,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1645592355875,"results":"33","hashOfConfig":"31"},{"size":2658,"mtime":1645592355875,"results":"34","hashOfConfig":"31"},{"size":2503,"mtime":1645592355875,"results":"35","hashOfConfig":"31"},{"size":907,"mtime":1645592355875,"results":"36","hashOfConfig":"31"},{"size":1724,"mtime":1645592355875,"results":"37","hashOfConfig":"31"},{"size":1562,"mtime":1645592355875,"results":"38","hashOfConfig":"31"},{"size":844,"mtime":1645592355873,"results":"39","hashOfConfig":"31"},{"size":1322,"mtime":1645592355874,"results":"40","hashOfConfig":"31"},{"size":1043,"mtime":1645592355876,"results":"41","hashOfConfig":"31"},{"size":1077,"mtime":1645592355876,"results":"42","hashOfConfig":"31"},{"size":908,"mtime":1645592355876,"results":"43","hashOfConfig":"31"},{"size":3080,"mtime":1645592355874,"results":"44","hashOfConfig":"31"},{"size":1502,"mtime":1645592355874,"results":"45","hashOfConfig":"31"},{"size":953,"mtime":1645592355873,"results":"46","hashOfConfig":"31"},{"size":2410,"mtime":1645592355873,"results":"47","hashOfConfig":"31"},{"size":266,"mtime":1647407307075,"results":"48","hashOfConfig":"49"},{"size":1577,"mtime":1647407657787,"results":"50","hashOfConfig":"49"},{"size":2524,"mtime":1647407473877,"results":"51","hashOfConfig":"49"},{"size":4784,"mtime":1647408534585,"results":"52","hashOfConfig":"49"},{"size":3192,"mtime":1647408876186,"results":"53","hashOfConfig":"49"},{"size":2622,"mtime":1647408162852,"results":"54","hashOfConfig":"49"},{"size":3267,"mtime":1647408121339,"results":"55","hashOfConfig":"49"},{"size":1234,"mtime":1647407554082,"results":"56","hashOfConfig":"49"},{"size":793,"mtime":1647407554083,"results":"57","hashOfConfig":"49"},{"size":1392,"mtime":1647407554080,"results":"58","hashOfConfig":"49"},{"size":966,"mtime":1647407937172,"results":"59","hashOfConfig":"49"},{"size":281,"mtime":1647407554084,"results":"60","hashOfConfig":"49"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fabqpr",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1miv0am",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/App.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/reportWebVitals.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Signup.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Login.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Home.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/Profile.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/pages/SingleThought.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/Footer/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/Header/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/auth.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/mutations.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/utils/queries.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/ThoughtForm/index.js",["126"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/ThoughtList/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/CommentList/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/Work/uw-blv-virt-fsf-pt-09-2021-u-c/week21_mern_graphql/01-Activities/26-Stu_Resolver-Context/Solved/client/src/components/CommentForm/index.js",["127"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/index.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/App.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/Navbar.js",[],["128","129"],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/pages/SearchBooks.js",["130","131","132"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await saveBook({\n        variables: {\n          book:{...bookToSave}\n        },\n      });\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/pages/SavedBooks.js",["133","134","135","136","137","138","139"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\nimport { getMe, deleteBook } from '../utils/API';\nimport { useQuery } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n  const { loading, data } = useQuery(GET_ME);\n  const [removeBook, { error }] = useMutation(REMOVE_BOOK);\n  const books = data?.me.savedBooks || []\n  \n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await removeBook({\n        variables: { bookId },\n      });\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n      document.location.reload();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {loading === false\n            ? `Viewing ${books.length} saved ${books.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {loading === false ?books.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          }):\"\"}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/LoginForm.js",["140","141"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (e) {\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/components/SignupForm.js",["142","143"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport {ADD_USER} from '../utils/mutations'\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  const [addUser, { error }] = useMutation(ADD_USER);\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n     try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/auth.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/localStorage.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/API.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/mutations.js",[],"/Users/daesangogle/Desktop/PreworkDO/HW/DaesangOgle-Homework/DaesangOgle-Homework-21/client/src/utils/queries.js",[],{"ruleId":"144","severity":1,"message":"145","line":41,"column":15,"nodeType":"146","messageId":"147","endLine":41,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":19,"column":15,"nodeType":"146","messageId":"147","endLine":19,"endColumn":19},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"144","severity":1,"message":"152","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"153","line":15,"column":22,"nodeType":"146","messageId":"147","endLine":15,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":70,"column":15,"nodeType":"146","messageId":"147","endLine":70,"endColumn":19},{"ruleId":"144","severity":1,"message":"154","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"155","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":6,"column":17,"nodeType":"146","messageId":"147","endLine":6,"endColumn":27},{"ruleId":"144","severity":1,"message":"157","line":12,"column":20,"nodeType":"146","messageId":"147","endLine":12,"endColumn":31},{"ruleId":"144","severity":1,"message":"153","line":14,"column":24,"nodeType":"146","messageId":"147","endLine":14,"endColumn":29},{"ruleId":"144","severity":1,"message":"158","line":18,"column":9,"nodeType":"146","messageId":"147","endLine":18,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":54,"column":15,"nodeType":"146","messageId":"147","endLine":54,"endColumn":19},{"ruleId":"144","severity":1,"message":"159","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":19},{"ruleId":"144","severity":1,"message":"153","line":13,"column":19,"nodeType":"146","messageId":"147","endLine":13,"endColumn":24},{"ruleId":"144","severity":1,"message":"160","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":20},{"ruleId":"144","severity":1,"message":"153","line":9,"column":21,"nodeType":"146","messageId":"147","endLine":9,"endColumn":26},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"'saveBook' is defined but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'getMe' is defined but never used.","'deleteBook' is defined but never used.","'setUserData' is assigned a value but never used.","'userDataLength' is assigned a value but never used.","'loginUser' is defined but never used.","'createUser' is defined but never used.","no-global-assign","no-unsafe-negation"]